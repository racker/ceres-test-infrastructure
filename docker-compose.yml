version: '3.4'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka-node
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      # topic string structure is "topic-name:partition:replica"
      KAFKA_CREATE_TOPICS: "unified.metrics.json:3:1,unified.metrics.json.5m:3:1,unified.metrics.json.20m:3:1,unified.metrics.json.60m:3:1,unified.metrics.json.240m:3:1,unified.metrics.json.1440m:3:1,uim.metrics.json:3:1,zenoss.metrics.json:3:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  localhost:
      image: influxdb:latest
      container_name: influxdb
      ports:
          - "8086:8086"
      volumes:
          - ${PWD}/influxdb.conf:/etc/influxdb/influxdb.conf:ro

  redis:
      image: 'bitnami/redis:latest'
      container_name: redis
      environment:
        - ALLOW_EMPTY_PASSWORD=yes
      ports:
        - '6379:6379'

  repose-public:
    image: rackerlabs/repose:${REPOSE_VERSION:-9.0.0.0}
    ports:
      - 8180:8080
    env_file:
      - common.env
    environment:
      KEYSTONE_USER: ${KEYSTONE_USER}
      KEYSTONE_PASSWORD: ${KEYSTONE_PASSWORD}
      BACKEND_HOST: ${REPOSE_BACKEND_HOST}
      BACKEND_PORT: 8080
    volumes:
      - ./repose-config:/etc/repose
    networks:
      - infra

networks:
  infra:
    external: true
