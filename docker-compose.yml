version: '3.4'

services:
  # main is a "virtual" service that brings up the essential services needed
  # for the applications to run
  main:
    image: google/pause
    depends_on:
      - kafka
      - influxdb
      - redis

  zookeeper:
    # no useful tags for zookeeper image, so just go with latest
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka-node
    image: wurstmeister/kafka:${KAFKA_VERSION:-2.12-2.4.1}
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      # topic string structure is "topic-name:partition:replica"
      KAFKA_CREATE_TOPICS: "unified.metrics.json:3:1,unified.metrics.json.5m:3:1,unified.metrics.json.20m:3:1,unified.metrics.json.60m:3:1,unified.metrics.json.240m:3:1,unified.metrics.json.1440m:3:1,uim.metrics.json:3:1,zenoss.metrics.json:3:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  influxdb:
      image: influxdb:${INFLUXDB_VERSION:-1.7-alpine}
      container_name: influxdb
      ports:
          - "8086:8086"
      volumes:
          - ${PWD}/influxdb.conf:/etc/influxdb/influxdb.conf:ro
          - influxdb:/var/lib/influxdb

  redis:
      image: bitnami/redis:${REDIS_VERSION:-5.0.9}
      container_name: redis
      environment:
        - ALLOW_EMPTY_PASSWORD=yes
      ports:
        - '6379:6379'

  repose-public:
    image: rackerlabs/repose:${REPOSE_VERSION:-9.0.1.0}
    ports:
      - 8180:8080
    env_file:
      - common.env
    environment:
      KEYSTONE_USER: ${KEYSTONE_USER}
      KEYSTONE_PASSWORD: ${KEYSTONE_PASSWORD}
      BACKEND_HOST: ${BACKEND_HOST:-host.docker.internal}
      BACKEND_PORT: ${BACKEND_PORT:-8080}
    volumes:
      - ./repose-config:/etc/repose

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-6.7.2}
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana-config/datasources.yml:/etc/grafana/provisioning/datasources/main.yml:ro
      - ./grafana-config/dashboards.yml:/etc/grafana/provisioning/dashboards/local.yml:ro
      - ./grafana-config/dashboards:/var/lib/grafana/dashboards:ro

volumes:
  influxdb: {}
  grafana: {}